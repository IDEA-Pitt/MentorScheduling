import data from google forms

assign data to each mentor and hour

classes have 4 hours exactly so they get added first
sort hours by length (small -> large)
sort mentor by length(small -> large)

any hours.length < 3 delete
remove said hours from mentors
resort mentors

schedule classes (add first)
- add 1 to hour.current
- remove from availability
- mentor.full = True
- remove from mentor array

next recursive/while stuff
Checks
- If List[hours] = empty()
- If List[Mentors] = empty()
- Or these IFs then ->
- And these IFs
- Else uhhhhhh
- Remove extra hours 

- Hopefully these are both true at the same time
- If not, I gotta change something. Idk. More prechecks

- [Hour] check if (3-current == availability.length) this should 
  also catch when Hour was filled without removal
    - Add these mentors to the Hour
    - Add this hour to each of the mentors added
    - remove this mentor from the sorted hour list
    - resort both arrays
    - recursive call back
- [Mentor] check if (4-scheduled == availability.length)
    - Add the Hours to this mentor
    - Add this mentor to each of the hours
    - remove this mentor from the sorted mentor list
    - resort both arrays
    - recursive call back
Checks Done
- sort(Hour[0].possibleMentors())
- add Hour[0].possibleMentors[0] to that hour. 
- Add that hour to the mentor. 
- resort both lists
- recursive call back

Bactracking Outline
May get stuck in an infinitie loop i think where it just switch two mentors back and forth 
for a while. Stick backtrack in with a timeout exception. If the exception is raised, no valid
schedule can be found (I think)

Find mentors willing to work 4+ hours
Find shared availability with either mentors who aren't schedulr 4 hours
or with hours that don't have 3 mentors.

If no shared availability
(hour isn't full)
go through available mentors in that hour,
if mentors willing to do  4+ hours match availability with mentors who are in that hour's available
switch mentors and add the mentor to the hour

(mentor isn't available)
find an hour to add back in. 
for the Hours in the availability, check those mentors in the hour. If any of those mentors have
availability for an hour that isn't scheduled for. Add that hour back
switch mentors, add the other mentor to that hour. 

check if we're Done
BNE backtrack